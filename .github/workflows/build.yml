# * 这是一个 GitHub Actions 的配置文件（YAML 格式），用于定义构建流程。该文件包括以下内容：

# * 定义了工作流的名称为 "Build Status"。
# * 触发条件包括 push 到 main 分支、打标签以及忽略特定文件夹和文件的变动；同时也包括 pull request 到 main 分支和手动触发工作流。
# * 设置了并发策略，以及对仓库内容、检查和 pull 请求的权限控制。
# * 定义了一个名为 "build" 的 job，该 job 在 ubuntu-latest 环境下运行。
# * 使用了一个矩阵策略，指定了操作系统和 Python 版本的组合。
# * 包含了一系列步骤，包括设置 Python 环境、安装依赖、代码检查、构建、测试、上传测试结果、发布单元测试结果、上传覆盖率、以及构建分发包等。

# * 这些步骤将在满足特定条件时执行，例如只有在 ubuntu-latest 环境下才执行 lint、checks、test 等步骤。

name: Build Status

on:
  push:
    branches:
    - main
    tags:
    - v*
    paths-ignore:
    - docs/
    - CONTRIBUTING.md
    - LICENSE
    - README.md
  pull_request:
    branches:
    - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Install dependencies
      run: make develop

    - name: Lint
      run: make lint
      if: ${{ matrix.os == 'ubuntu-latest' }}

    - name: Checks
      run: make checks
      if: ${{ matrix.os == 'ubuntu-latest' }}

    - name: Build
      run: make build

    - name: Test
      run: make coverage
      if: ${{ matrix.os == 'ubuntu-latest' }}

    - name: Upload test results (Python)
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: junit.xml
      if: ${{ always() }}

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: |
          **/junit.xml
      if: ${{ matrix.os == 'ubuntu-latest' }}

    - name: Upload coverage
      uses: codecov/codecov-action@v4

    - name: Make dist
      run: make dist
      if: ${{ matrix.os == 'ubuntu-latest' }}
